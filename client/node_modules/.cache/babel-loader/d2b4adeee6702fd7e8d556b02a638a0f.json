{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Unstable Unicorns\\\\client\\\\src\\\\Screens\\\\Loading.js\",\n    _s = $RefreshSig$();\n\nimport \"/Users/Admin/Unstable Unicorns/client/src/Screens/ScreenCSS/loading.css\";\nimport { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io.connect(\"http://localhost:3001\", {\n  reconnect: true\n});\nsocket.on(\"connect_error\", err => {\n  console.log(`connect_error due to ${err.message}`);\n});\n\nconst Loading = props => {\n  _s();\n\n  const data = queryString.parse(props.location.search);\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(data.roomCode);\n  const [roomFull, setRoomFull] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  useEffect(() => {\n    socket.emit(\"join_room\", {\n      room: room\n    }, error => {\n      if (error) setRoomFull(true);\n    });\n    socket.on(\"roomData\", _ref => {\n      let {\n        users\n      } = _ref;\n      setUsers(users);\n    });\n    socket.on(\"currentUserData\", _ref2 => {\n      let {\n        name\n      } = _ref2;\n      setCurrentUser(name);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Contains the rounded rectangle image and List of players in room.\n    //Image shows the purple round rectangle to dispaly hold text\n    // Holds waiting for players gif and number of players\n    // Displays list of players in room\n    _jsxDEV(\"div\", {\n      className: \"Homepage2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"/Users/Admin/Unstable Unicorns/client/src/assets/pplist.png\"),\n        alt: \"List\",\n        height: \"600px\",\n        class: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WaitHead\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Number of players in room \", users.length, \"/2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ListPlayers\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: users.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.name\n            }, item.objectID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Loading, \"k8FIPBX5oSeLfadPVLbsfQkYfaQ=\");\n\n_c = Loading;\nexport default Loading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["useEffect","useState","queryString","io","require","socket","connect","reconnect","on","err","console","log","message","Loading","props","data","parse","location","search","username","setUsername","room","setRoom","roomCode","roomFull","setRoomFull","users","setUsers","currentUser","setCurrentUser","emit","error","name","length","map","item","objectID"],"sources":["C:/Users/Admin/Unstable Unicorns/client/src/Screens/Loading.js"],"sourcesContent":["import \"/Users/Admin/Unstable Unicorns/client/src/Screens/ScreenCSS/loading.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\nvar io = require(\"socket.io-client\");\r\nvar socket = io.connect(\"http://localhost:3001\", { reconnect: true });\r\n\r\nsocket.on(\"connect_error\", (err) => {\r\n  console.log(`connect_error due to ${err.message}`);\r\n});\r\n\r\nconst Loading = (props) => {\r\n  const data = queryString.parse(props.location.search);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(data.roomCode);\r\n  const [roomFull, setRoomFull] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join_room\", { room: room }, (error) => {\r\n      if (error) setRoomFull(true);\r\n    });\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.on(\"currentUserData\", ({ name }) => {\r\n      setCurrentUser(name);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    // Contains the rounded rectangle image and List of players in room.\r\n    //Image shows the purple round rectangle to dispaly hold text\r\n    // Holds waiting for players gif and number of players\r\n    // Displays list of players in room\r\n    <div className=\"Homepage2\">\r\n      <img\r\n        src={require(\"/Users/Admin/Unstable Unicorns/client/src/assets/pplist.png\")}\r\n        alt=\"List\"\r\n        height={\"600px\"}\r\n        class={\"center\"}\r\n      />\r\n\r\n      <div className=\"WaitHead\">\r\n        {/* Dispaly number of users in room with header Number of Players 1/4 */}\r\n        <h1>Number of players in room {users.length}/2</h1>\r\n        <div className=\"ListPlayers\">\r\n          <ul>\r\n            {users.map((item) => (\r\n              <li key={item.objectID}>\r\n                {item.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n"],"mappings":";;;AAAA,OAAO,yEAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAhB;;AACA,IAAIC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,EAAoC;EAAEC,SAAS,EAAE;AAAb,CAApC,CAAb;AAEAF,MAAM,CAACG,EAAP,CAAU,eAAV,EAA4BC,GAAD,IAAS;EAClCC,OAAO,CAACC,GAAR,CAAa,wBAAuBF,GAAG,CAACG,OAAQ,EAAhD;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAMC,IAAI,GAAGb,WAAW,CAACc,KAAZ,CAAkBF,KAAK,CAACG,QAAN,CAAeC,MAAjC,CAAb;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAACc,IAAI,CAACQ,QAAN,CAAhC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACdK,MAAM,CAACyB,IAAP,CAAY,WAAZ,EAAyB;MAAET,IAAI,EAAEA;IAAR,CAAzB,EAA0CU,KAAD,IAAW;MAClD,IAAIA,KAAJ,EAAWN,WAAW,CAAC,IAAD,CAAX;IACZ,CAFD;IAIApB,MAAM,CAACG,EAAP,CAAU,UAAV,EAAsB,QAAe;MAAA,IAAd;QAAEkB;MAAF,CAAc;MACnCC,QAAQ,CAACD,KAAD,CAAR;IACD,CAFD;IAIArB,MAAM,CAACG,EAAP,CAAU,iBAAV,EAA6B,SAAc;MAAA,IAAb;QAAEwB;MAAF,CAAa;MACzCH,cAAc,CAACG,IAAD,CAAd;IACD,CAFD;EAGD,CAZQ,EAYN,EAZM,CAAT;EAcA;IAAA;IACE;IACA;IACA;IACA;IACA;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QACE,GAAG,EAAE5B,OAAO,CAAC,6DAAD,CADd;QAEE,GAAG,EAAC,MAFN;QAGE,MAAM,EAAE,OAHV;QAIE,KAAK,EAAE;MAJT;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAK,SAAS,EAAC,UAAf;QAAA,wBAEE;UAAA,yCAA+BsB,KAAK,CAACO,MAArC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAK,SAAS,EAAC,aAAf;UAAA,uBACE;YAAA,UACGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACT;cAAA,UACGA,IAAI,CAACH;YADR,GAASG,IAAI,CAACC,QAAd;cAAA;cAAA;cAAA;YAAA,QADD;UADH;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EALF;AA4BD,CAlDD;;GAAMvB,O;;KAAAA,O;AAoDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}